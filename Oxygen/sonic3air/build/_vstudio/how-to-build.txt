
=== Build for Windows using Visual Studio ===


PLEASE NOTE:

- The Visual Studio projects are configured for statically linking all libraries together
	into one exe. This applies to the external dependencies as well. (Only exception is the
	Discord Game SDK.)



>>> What you need

Visual Studio 2019 (Community or Professional edition) with the "Desktop development with C++"
workload installed.

Visual Studio 2022 should work as well, but isn't tested yet.



>>> Build the external dependencies in "framework"

Under "framework/external", you can find multiple libraries that S3AIR is built upon.
Each of them needs to be built once.

The easiest way to do so is as follows:

- Open the batch script at "framework/external/build_externals_windows.bat" with a text editor
	and change "msbuildPath" to point to your Visual Studio installation's MSBuild.exe.

- Then execute the batch script.

- If everything went fine, the "framework/lib" directory should now be populated with
	sub-directories "x64", "x64d", "x86", "x86d" with each containing "libogg", "libvorbis",
	"minizip", "sdl", "zlib" and the respective .lib files inside those.

Alternatively or in case of errors:

- Have a look at the "how-to-build.txt" files inside the sub-directories of "framework/external"
	for details on how to build manually. If building from the S3AIR Github repository, you can
	ignore the "If downloaded xyz separately or updating it" part of the instructions, as these
	changes are already applied to the Visual Studio projects.

- When building manually, make sure to execute the copy scripts (like "copy_sdl.bat") for each
	library.



>>> Build the main Visual Studio solution

Open the "sonic3air.sln" right next to this text file. Choose "sonic3air" as startup project and
build / run it. That's all.
