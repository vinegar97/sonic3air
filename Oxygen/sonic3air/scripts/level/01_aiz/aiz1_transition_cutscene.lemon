/*
	This script file is part of the Sonic 3 A.I.R. script software distribution.
	Copyright (C) 2017-2024 by Eukaryot

	Published under the GNU GPLv3 open source software license, see license.txt
	or https://www.gnu.org/licenses/gpl-3.0.en.html
*/



//-------------------------------------------------------//
// Cutscene: Transition to burning AIZ                   //
//-------------------------------------------------------//

//# address-hook(0x0684ec) end(0x0684fa)
function void AIZ1.Transition.Update()
{
	// Called addresses:
	//  - 0x068508	-> objA0.base_state = 0x00	-> Initialization
	//  - 0x06852c	-> objA0.base_state = 0x02	-> Waiting until character reaches the right position
	//  - 0x068574	-> objA0.base_state = 0x04	-> Short wait time before spawning subobjects
	//  - 0x0685b8	-> objA0.base_state = 0x06	-> Flying in
	//  - 0x0685fc	-> objA0.base_state = 0x08	-> Firing its rockets
	call tableLookupAddress(0x0684fe, objA0.base_state)

#if STANDALONE
	// Not in Time Attack please, as this can do funny things like spawn a sign post
	if (!Game.isTimeAttack())
#endif
	{
		Boss.AIZ1.RegularUpdate()
	}
}


// objA0.base_state = 0x00	-> Initialization

//# address-hook(0x068508) end(0x068526)
function void fn068508()
{
#if STANDALONE
	// Move to the right for widescreen
	objA0.position.x.u16 += getScreenExtend()
#endif

	setupObjectAttributesFull(0x068ffe)

	boss.remaining_hits = 0x60
	screenmover_target.right = move_area.right
	level.boss_encounter = 1

	requestLoadingPatterns(0x5a)		// Boss sprites
}


// objA0.base_state = 0x02	-> Waiting until character reaches the right position

//# address-hook(0x06852c) end(0x068550)
function void fn06852c()
{
#if STANDALONE
	// Extend level chunks a bit
	u8[0xffff82ce] = u8[0xffff82cd]
	u8[0xffff832f] = u8[0xffff832e]
	u8[0xffff8390] = u8[0xffff838f]
#endif

	D5.u16 = 0x2f10
	if (camera.position.x.u16 < D5.u16)
	{
	#if STANDALONE
		// Set right border here already to prevent camera going too far for one frame
		move_area.right = D5.u16 + (getScreenWidth() - 320)
	#endif
		return
	}

#if STANDALONE
	// In Time Attack, skip most of the transition
	if (Game.isTimeAttack())
	{
		// Trigger fire wall immediately
		u16[0xffffeec6] = -1

		addPatternLoadingCue(0x083d48)		// Monitor, small explosion, and critter sprites

		UnloadObject()
		return
	}
#endif

	// Trigger AIZ 1 transition cutscene
	objA0.countdown_callback = 0x06857a

	// "spawnIdenticalChildObjects(0x06906a)" replaced by:
	spawnChildObjects(0x068dfa, 0, 0, 6)		// Passing miniboss drones in the background

	loadPaletteLine1(0x06917c)

	fn068556()
}


//# address-hook(0x068556) end(0x068572)
function void fn068556()
{
	objA0.base_state = 0x04
	objA0.countdown_value = 180		// 3 seconds
	move_area.left = D5.u16
	move_area.right = D5.u16 + (getScreenWidth() - 320)
	playMusic(MUSIC_CTRL_FADEOUT)
}


// objA0.base_state = 0x0a, 0x0c  -> Inactive (empty function)

//# address-hook(0x068572) end(0x068572)
function void fn068572()
{
}


// objA0.base_state = 0x04	-> Short wait time before spawning subobjects

//# address-hook(0x068574) end(0x068574)
function void fn068574()
{
	Object.CountdownAndTrigger()
}


//# address-hook(0x06857a) end(0x0685b6)
function void fn06857a()
{
	objA0.countdown_callback = 0x0685be
	objA0.base_state = 0x06

	// "spawnChildObjects(0x06905c)" replaced by:
	spawnChildObject(0x0686be, 0x00, 0, 32)		// Exhaust flames
	spawnChildObject(0x06870a, 0x02, -36, 8)	// Flamethrower nozzle

	// Spawn rocket launchers
	// "spawnChildObjects(0x069072)" replaced by:
	spawnChildObject(0x06872c, 0x00, 0, -32)	// Front
	spawnChildObject(0x06872c, 0x02, 9, -28)	// Middle
	spawnChildObject(0x06872c, 0x04, 18, -24)	// Back

	fn06859c()
}


//# address-hook(0x06859c)
function void fn06859c()
{
	objA0.velocity.y = 0x100
	objA0.countdown_value = 175		// 3 seconds minus 5 frames
	playMusic(MUSIC_MINIBOSS_2)
	level.default_music.u8 = MUSIC_MINIBOSS_2
}


// objA0.base_state = 0x06	-> Flying in

//# address-hook(0x0685b8) end(0x0685b8)
function void fn0685b8()
{
	// fn0856b2()
	UpdateMovementStraightSimple()
	Object.CountdownAndTrigger()
	Enemy.DrawDynamicObject()
}

/* 
//# address-hook(0x0856b2) end(0x0856bc)
function void fn0856b2()
{
	UpdateMovementStraightSimple()
	Object.CountdownAndTrigger()
	Enemy.DrawDynamicObject()
}
 */

//# address-hook(0x0685be) end(0x0685fa)
function void fn0685be()
{
	objA0.countdown_value = 0x7f
	objA0.countdown_callback = 0x06862e
	objA0.value39 = 3
	objA0.flags38 |= 0x02
	fn0685d8()
}


//# address-hook(0x0685d8)
function void fn0685d8()
{
	objA0.base_state = 0x08
	objA0.velocity.y = 0
	fn0685e2()
}


//# address-hook(0x0685e2)
function void fn0685e2()
{
	// Common hovering values for various objects
	objA0.value3e = 0xc0		// Limit
	objA0.velocity.y = 0xc0
	u16[A0 + 0x40] = 0x10		// Step
	objA0.flags38 &= ~0x01
}


// objA0.base_state = 0x08	-> Flamethrower and/or rockets

//# address-hook(0x0685fc) end(0x068602)
function void fn0685fc()
{
	fn0847e6()

	// fn0856b2()
	UpdateMovementStraightSimple()
	Object.CountdownAndTrigger()
	Enemy.DrawDynamicObject()
}



//# address-hook(0x06862e) end(0x068640)
function void fn06862e()
{
	objA0.countdown_value = 0x10
	objA0.countdown_callback = 0x068646

	// "spawnChildObjects(0x069104)" replaced by:
	spawnChildObject(0x083f22, 0x00, 0, 0)		// Random explosions before the fire transition
}


//# address-hook(0x068646) end(0x06868e)
function void fn068646()
{
	objA0.update_address = 0x068690
	loadPaletteLine1(0x06917c)

	u8[A0 + 0x28] = 0x0f
	playMusic(MUSIC_CTRL_FADEOUT)

	objA0.velocity.x = 0x400
	objA0.velocity.y = 0
	objA0.countdown_value = (global.zone_act == 0x0000) ? 0x120 : 0x40
	objA0.countdown_callback = addressof(Object.TriggerUnloading)

	// Trigger fire wall
	u8[0xffffeec6] = -1
}


//# address-hook(0x068690) end(0x0686b8)
function void fn068690()
{
	UpdateMovementStraightSimple()
	--objA0.countdown_value
	if (objA0.countdown_value >= 0)
	{
		DrawObject()
	}
	else
	{
		level.boss_encounter = 0
		PlayMusicAfterLevelResults()

		addPatternLoadingCue(0x083d48)		// Monitor, small explosion, and critter sprites
		fn0852ae()
	}
}



//-------------------------------------------------------//
// Rocket launchers                                      //
//-------------------------------------------------------//

//# address-hook(0x06872c) end(0x068740)
function void fn06872c()
{
	MoveAndFlipWithParent()

	// Targets:
	//  - 0x068754	-> objA0.base_state = 0x00  -> Initialization
	//  - 0x06875e	-> objA0.base_state = 0x02  -> Waiting while blimp flies in from above
	//  - 0x06877e	-> objA0.base_state = 0x04  -> Closed
	//  - 0x06879c	-> objA0.base_state = 0x06  -> Opening / Opened the lid
	//  - 0x0687dc	-> objA0.base_state = 0x08  -> Shooting rockets
	//  - 0x06879c	-> objA0.base_state = 0x0a  -> Closing again (same function as state 0x06!)
	//  - 0x068572	-> objA0.base_state = 0x0c  -> Inactive (empty function)
	call tableLookupAddress(0x068746, objA0.base_state)

	fn08498c()
}


// objA0.base_state = 0x00  -> Initialization

//# address-hook(0x068754) end(0x068758)
function void fn068754()
{
	setupObjectAttributesMost(0x06901a)
}


// objA0.base_state = 0x02  -> Waiting while blimp flies in from above

//# address-hook(0x06875e) end(0x06877a)
function void fn06875e()
{
	A1 = 0xffff0000 + u16[A0 + 0x46]
	if ((u8[A1 + 0x38] & 0x02) == 0)
		return

	objA0.base_state = 0x04
	objA0.countdown_callback = 0x068784
	fn068ec0()
}


// objA0.base_state = 0x04  -> Closed

//# address-hook(0x06877e) end(0x06877e)
function void fn06877e()
{
	Object.CountdownAndTrigger()
}


//# address-hook(0x068784) end(0x068784)
function void fn068784()
{
	objA0.countdown_callback = 0x0687a2
	fn06878c()
}


//# address-hook(0x06878c) end(0x06879a)
function void fn06878c()
{
	objA0.base_state = 0x06
	u32[A0 + 0x30] = 0x06912f
}


// objA0.base_state = 0x06, 0x0a  -> Opening and closing the lid

//# address-hook(0x06879c) end(0x06879c)
function void fn06879c()
{
	Object.AnimationProgressByLocalA1.DistinctTimer()
}


//# address-hook(0x0687a2) end(0x0687d6)
function void fn0687a2()
{
	objA0.base_state = 0x08
	objA0.value39 = 3
	objA0.countdown_callback = 0x0687b6
	fn0687b6()
}


//# address-hook(0x0687b6)
function void fn0687b6()
{
	objA0.countdown_value = 28
	--objA0.value39

	// Spawn rockets
	if (objA0.value39 == 1)
	{
		// "spawnChildObjects(0x0690a8)" replaced by:
		spawnChildObject(0x06880a, 0x00, 0, 4)		// Rocket launcher smoke
		spawnChildObject(0x068c96, 0x02, 0, 4)		// Rocket (explodes on ground)
	}
	else
	{
		// "spawnChildObjects(0x06909a)" replaced by:
		spawnChildObject(0x06880a, 0x00, 0, 4)		// Rocket launcher smoke
		spawnChildObject(0x068844, 0x02, 0, 4)		// Rocket (passes through ground)
	}
}


// objA0.base_state = 0x08  -> Shooting rockets

//# address-hook(0x0687dc) end(0x068800)
function void fn0687dc()
{
	Object.CountdownAndTrigger()
	if (s8(objA0.value39) >= 0)
		return

	objA0.base_state = 0x0a
	u32[A0 + 0x30] = 0x069136
	objA0.countdown_callback = 0x068802
}


//# address-hook(0x068802) end(0x068808)
function void fn068802()
{
	objA0.base_state = 0x0c
}



//-------------------------------------------------------//
// Additional rockets in transition cutscene             //
//-------------------------------------------------------//

//# address-hook(0x068844) end(0x06884e)
function void fn068844()
{
	// Targets:
	//  - 0x06885a	-> objA0.base_state = 0x00	-> Initialization
	//  - 0x06888e	-> objA0.base_state = 0x02	-> Flying up
	//  - 0x068574	-> objA0.base_state = 0x04	-> Short wait time before flying down
	//  - 0x06888e	-> objA0.base_state = 0x06	-> Flying down
	call tableLookupAddress(0x068852, objA0.base_state)
}


// objA0.base_state = 0x00  -> Initialization

//# address-hook(0x06885a) end(0x068888)
function void fn06885a()
{
	setupObjectAttributesMost(0x06902a)
	playSound(0x4d)

	u32[A0 + 0x30] = 0x06914c
	objA0.countdown_callback = 0x06889a
	objA0.velocity.y = -0x400
	objA0.countdown_value = 0x60
	DrawObject()
}


// objA0.base_state = 0x02, 0x06	-> Flying rockets

//# address-hook(0x06888e) end(0x068894)
function void fn06888e()
{
	// fn08564c()
	UpdateMovementStraightSimple()
	Object.AnimationProgressByLocalA1()
	Object.CountdownAndTrigger()

	DrawObject()
}


//# address-hook(0x06889a) end(0x0688ae)
function void fn06889a()
{
	objA0.base_state = 0x04
	objA0.countdown_value = 8
	objA0.countdown_callback = 0x0688b0
}


//# address-hook(0x0688b0) end(0x0688f2)
function void fn0688b0()
{
	objA0.base_state = 0x06
	playSound(SFX_BOMBFALL)
	objA0.sprite_priority = 0x80
	objA0.render_flags |= render_flag.FLIP_Y
	objA0.countdown_callback = addressof(Object.TriggerUnloading)
	objA0.countdown_value = 0x60

	A1 = 0xffff0000 + u16[A0 + 0x46]
	D0 = u8[A1 + 0x2c]
	fn068ee4()

	objA0.position.y.u16 = camera.position.y.u16 - 0x20
}



//-------------------------------------------------------//
// Passing miniboss drones in the background             //
//-------------------------------------------------------//

//# address-hook(0x068dfa) end(0x068e46)
function void fn068dfa()
{
	setupObjectAttributesFull(0x06904a)
	objA0.update_address = 0x068e7e
	objA0.countdown_callback = 0x068e84

	D0 = objA0.subtype2c
	D1.u16 = camera.position.y.u16		// Not used here?
	objA0.position.x.u16 = camera.position.x.u16 + u16[0x068e48 + D0.u16]
	objA0.position.y.u16 = u16[0x068e54 + D0.u16]
	objA0.velocity.x = u16[0x068e60 + D0.u16]
	objA0.countdown_value = u16[0x068e60 + D0.u16]
	D0.u16 >>= 1
	objA0.animation.sprite = u8[0x068e78 + D0.u16]
}


//# address-hook(0x068e7e) end(0x068e7e)
function void fn068e7e()
{
	Object.CountdownAndTrigger()
}


//# address-hook(0x068e84) end(0x068e8a)
function void fn068e84()
{
	objA0.update_address = 0x068e8c
}


//# address-hook(0x068e8c) end(0x068e92)
function void fn068e8c()
{
	UpdateMovementStraightSimple()
	fn08498c()
}



//-------------------------------------------------------//
// Random explosions before the fire transition          //
//-------------------------------------------------------//

//# address-hook(0x083f22) end(0x083f46)
function void fn083f22()
{
	objA0.countdown_value = 2
	objA0.position.x.u16 = camera.position.x.u16 + getScreenWidth() / 2
	objA0.position.y.u16 = camera.position.y.u16 + 0x70
	objA0.subtype2c = 2
	fn083d84()
}

/* 
//# address-hook(0x08564c) end(0x08564c)
function void fn08564c()		// Move_AnimateRaw_Wait
{
	UpdateMovementStraightSimple()
	Object.AnimationProgressByLocalA1()
	Object.CountdownAndTrigger()
}
 */


// This object draws a part of the palmtree that should be rendered on top of the blimps in BG

//# address-hook(0x01e78a) end(0x01e7b0)
function void fn01e78a()
{
	objA0.mapping_offset = 0x21c3e8
	objA0.sprite_priority = 0x180
	objA0.box_size.x = 8
	objA0.render_flags = render_flag.WORLD
	objA0.sprite_attributes = (sprite_attribute.PALETTE.LINE2 | 0x0001)
	objA0.update_address = 0x01e7b0
	fn01e7b0()
}


//# address-hook(0x01e7b0)
function void fn01e7b0()
{
	DrawOrUnloadObject()
}
