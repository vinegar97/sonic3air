/*
	This script file is part of the Sonic 3 A.I.R. script software distribution.
	Copyright (C) 2017-2025 by Eukaryot

	Published under the GNU GPLv3 open source software license, see license.txt
	or https://www.gnu.org/licenses/gpl-3.0.en.html
*/



//-------------------------------------------------------//
// Decorative Sprite (used in several levels)            //
//-------------------------------------------------------//

//# address-hook(0x02b928) end(0x02b962)
function void fn02b928()
{
	objA0.mapping_offset = 0x02ba9a
	objA0.render_flags |= render_flag.WORLD
	objA0.animation.sprite = objA0.subtype2c

#if STANDALONE
	// Original S3&K uses subtypes 0x00 to 0x32, the others are free to use by S3AIR and mods
	//  -> The actual rendering logic happens in renderhooks
	if (objA0.subtype2c >= 0x33)
	{
		Standalone.setupCustomDecorativeSprite()
	}
	else
#endif
	{
		A1 = 0x02b968 + objA0.subtype2c * 6
		objA0.sprite_attributes = u16[A1]
		objA0.sprite_priority = u16[A1+2]
		objA0.box_size.x = u8[A1+4]
		objA0.box_size.y = u8[A1+5]
	}

	objA0.update_address = 0x02b962
	fn02b962()
}


//# address-hook(0x02b962) end(0x02b962)
function void fn02b962()
{
	DrawOrUnloadObject()
}


#if STANDALONE
function void Standalone.setupCustomDecorativeSprite()
{
	// For what subtype is what, see the "Custom decorative object" part in renderhooks.lemon
	if (objA0.subtype2c == 0x33)
	{
		objA0.box_size.x = 16
		objA0.box_size.y = 8
	}
	else if (objA0.subtype2c == 0x34)
	{
		objA0.box_size.x = 128
		objA0.box_size.y = 128
	}
}
#endif
